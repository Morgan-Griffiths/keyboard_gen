const KEY_WIDTH: i32 = 70;
const KEY_HEIGHT: i32 = 70;
const TAB_WIDTH: i32 = 110;
const SHIFT_WIDTH: i32 = 160;
const SPACE_WIDTH: i32 = 360;
const ENTER_WIDTH: i32 = 125;
const COMMAND_WIDTH: i32 = 87;
const BACKSPACE_WIDTH: i32 = 110;
const CAPSLOCK_WIDTH: i32 = 125;
const HORIZONTAL_GAP: i32 = 2;
const VERTICAL_GAP: i32 = 3;
const ROW_HEIGHT: i32 = 70;
const KEYBOARD_HEIGHT: i32 = ROW_HEIGHT * 5;
const KEYBOARD_WIDTH: i32 = KEY_WIDTH * 13 + BACKSPACE_WIDTH + HORIZONTAL_GAP * 13;
const ALL_USED_KEYS: [&str; 47] = ["`", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "-", "=", "q", "w", "e", "r", "t", "y", "u", "i", "o", "p", "[", "]", "\", "a", "s", "d", "f", "g", "h", "j", "k", "l", ";", "'", "z", "x", "c", "v", "b", "n", "m", ",", ".", "/", " "];

let DEFAULT_TRANSLATION: std::collections::HashMap<&str, &str> = ALL_USED_KEYS.iter().zip(ALL_USED_KEYS.iter()).collect();

let ROW_ONE_POSITIONS: std::collections::HashMap<&str, (i32, i32)> = [
("`", (0 + KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - ROW_HEIGHT * 0.5)),
("1", ((KEY_WIDTH * 2) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - ROW_HEIGHT * 0.5)),
("2", ((KEY_WIDTH * 3) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - ROW_HEIGHT * 0.5)),
("3", ((KEY_WIDTH * 4) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - ROW_HEIGHT * 0.5)),
("4", ((KEY_WIDTH * 5) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - ROW_HEIGHT * 0.5)),
("5", ((KEY_WIDTH * 6) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - ROW_HEIGHT * 0.5)),
("6", ((KEY_WIDTH * 7) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - ROW_HEIGHT * 0.5)),
("7", ((KEY_WIDTH * 8) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - ROW_HEIGHT * 0.5)),
("8": ((KEY_WIDTH * 9) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - ROW_HEIGHT * 0.5)),
("9": ((KEY_WIDTH * 10) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - ROW_HEIGHT * 0.5)),
("0": ((KEY_WIDTH * 11) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - ROW_HEIGHT * 0.5)),
("-": ((KEY_WIDTH * 12) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - ROW_HEIGHT * 0.5)),
("=": ((KEY_WIDTH * 13) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - ROW_HEIGHT * 0.5)),
("backspace": ((KEY_WIDTH * 13 + BACKSPACE_WIDTH) - BACKSPACE_WIDTH * 0.5,KEYBOARD_HEIGHT - ROW_HEIGHT * 0.5)),
]

let ROW_TWO_POSITIONS: std::collections::HashMap<&str, (i32, i32)> = [
("tab": (0 + TAB_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT + VERTICAL_GAP + ROW_HEIGHT * 0.5))),
("q": ((TAB_WIDTH + KEY_WIDTH * 1) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT + VERTICAL_GAP  + ROW_HEIGHT * 0.5))),
("w": ((TAB_WIDTH + KEY_WIDTH * 2) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT + VERTICAL_GAP  + ROW_HEIGHT * 0.5))),
("e": ((TAB_WIDTH + KEY_WIDTH * 3) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT + VERTICAL_GAP  + ROW_HEIGHT * 0.5))),
("r": ((TAB_WIDTH + KEY_WIDTH * 4) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT + VERTICAL_GAP  + ROW_HEIGHT * 0.5))),
("t": ((TAB_WIDTH + KEY_WIDTH * 5) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT + VERTICAL_GAP  + ROW_HEIGHT * 0.5))),
("y": ((TAB_WIDTH + KEY_WIDTH * 6) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT + VERTICAL_GAP  + ROW_HEIGHT * 0.5))),
("u": ((TAB_WIDTH + KEY_WIDTH * 7) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT + VERTICAL_GAP  + ROW_HEIGHT * 0.5))),
("i": ((TAB_WIDTH + KEY_WIDTH * 8) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT + VERTICAL_GAP  + ROW_HEIGHT * 0.5))),
("o": ((TAB_WIDTH + KEY_WIDTH * 9) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT + VERTICAL_GAP  + ROW_HEIGHT * 0.5))),
("p": ((TAB_WIDTH + KEY_WIDTH * 10) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT + VERTICAL_GAP  + ROW_HEIGHT * 0.5))),
("[": ((TAB_WIDTH + KEY_WIDTH * 11) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT + VERTICAL_GAP  + ROW_HEIGHT * 0.5))),
("]": ((TAB_WIDTH + KEY_WIDTH * 12) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT + VERTICAL_GAP  + ROW_HEIGHT * 0.5))),
("\\": ((TAB_WIDTH + KEY_WIDTH * 13) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT + VERTICAL_GAP  + ROW_HEIGHT * 0.5))),
]


let ROW_THREE_POSITIONS: std::collections::HashMap<&str, (i32, i32)> = [
("capslock": (0 + CAPSLOCK_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 2 + VERTICAL_GAP * 2 + ROW_HEIGHT * 0.5))),
("a": ((CAPSLOCK_WIDTH + KEY_WIDTH * 1) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 2 + VERTICAL_GAP * 2 + ROW_HEIGHT * 0.5))),
("s": ((CAPSLOCK_WIDTH + KEY_WIDTH * 2) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 2 + VERTICAL_GAP * 2 + ROW_HEIGHT * 0.5))),
("d": ((CAPSLOCK_WIDTH + KEY_WIDTH * 3) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 2 + VERTICAL_GAP * 2 + ROW_HEIGHT * 0.5))),
("f": ((CAPSLOCK_WIDTH + KEY_WIDTH * 4) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 2 + VERTICAL_GAP * 2 + ROW_HEIGHT * 0.5))),
("g": ((CAPSLOCK_WIDTH + KEY_WIDTH * 5) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 2 + VERTICAL_GAP * 2 + ROW_HEIGHT * 0.5))),
("h": ((CAPSLOCK_WIDTH + KEY_WIDTH * 6) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 2 + VERTICAL_GAP * 2 + ROW_HEIGHT * 0.5))),
("j": ((CAPSLOCK_WIDTH + KEY_WIDTH * 7) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 2 + VERTICAL_GAP * 2 + ROW_HEIGHT * 0.5))),
("k": ((CAPSLOCK_WIDTH + KEY_WIDTH * 8) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 2 + VERTICAL_GAP * 2 + ROW_HEIGHT * 0.5))),
("l": ((CAPSLOCK_WIDTH + KEY_WIDTH * 9) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 2 + VERTICAL_GAP * 2 + ROW_HEIGHT * 0.5))),
(";": ((CAPSLOCK_WIDTH + KEY_WIDTH * 10) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 2 + VERTICAL_GAP * 2 + ROW_HEIGHT * 0.5))),
("\'": ((CAPSLOCK_WIDTH + KEY_WIDTH * 11) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 2 + VERTICAL_GAP * 2 + ROW_HEIGHT * 0.5))),
("enter": ((CAPSLOCK_WIDTH + ENTER_WIDTH + KEY_WIDTH * 11) - ENTER_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 2 + VERTICAL_GAP * 2 + ROW_HEIGHT * 0.5))),
]

let ROW_FOUR_POSITIONS: std::collections::HashMap<&str, (i32, i32)> = [
    ("left_shift": (0 + SHIFT_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 3 + VERTICAL_GAP * 3 + ROW_HEIGHT * 0.5))),
    ("z": ((SHIFT_WIDTH + KEY_WIDTH * 1) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 3 + VERTICAL_GAP * 3 + ROW_HEIGHT * 0.5))),
    ("x": ((SHIFT_WIDTH + KEY_WIDTH * 2) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 3 + VERTICAL_GAP * 3 + ROW_HEIGHT * 0.5))),
    ("c": ((SHIFT_WIDTH + KEY_WIDTH * 3) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 3 + VERTICAL_GAP * 3 + ROW_HEIGHT * 0.5))),
    ("v": ((SHIFT_WIDTH + KEY_WIDTH * 4) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 3 + VERTICAL_GAP * 3 + ROW_HEIGHT * 0.5))),
    ("b": ((SHIFT_WIDTH + KEY_WIDTH * 5) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 3 + VERTICAL_GAP * 3 + ROW_HEIGHT * 0.5))),
    ("n": ((SHIFT_WIDTH + KEY_WIDTH * 6) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 3 + VERTICAL_GAP * 3 + ROW_HEIGHT * 0.5))),
    ("m": ((SHIFT_WIDTH + KEY_WIDTH * 7) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 3 + VERTICAL_GAP * 3 + ROW_HEIGHT * 0.5))),
    (",": ((SHIFT_WIDTH + KEY_WIDTH * 8) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 3 + VERTICAL_GAP * 3 + ROW_HEIGHT * 0.5))),
    (".": ((SHIFT_WIDTH + KEY_WIDTH * 9) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 3 + VERTICAL_GAP * 3 + ROW_HEIGHT * 0.5))),
    ("/": ((SHIFT_WIDTH + KEY_WIDTH * 10) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 3 + VERTICAL_GAP * 3 + ROW_HEIGHT * 0.5))),
    ("right_shift": ((SHIFT_WIDTH * 2 + KEY_WIDTH * 10) - SHIFT_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 3 + VERTICAL_GAP * 3 + ROW_HEIGHT * 0.5))),
]
let ROW_FIVE_POSITIONS: std::collections::HashMap<&str, (i32, i32)> = [
    ("fn": (0 + KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 4 + VERTICAL_GAP * 4 + ROW_HEIGHT * 0.5))),
    ("left_control": ((KEY_WIDTH * 2) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 4 + VERTICAL_GAP * 4 + ROW_HEIGHT * 0.5))),
    ("left_option": ((KEY_WIDTH * 3) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 4 + VERTICAL_GAP * 4 + ROW_HEIGHT * 0.5))),
    ("left_command": ((KEY_WIDTH * 3) + COMMAND_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 4 + VERTICAL_GAP * 4 + ROW_HEIGHT * 0.5))),
    (" ": ((KEY_WIDTH * 3 + COMMAND_WIDTH) + SPACE_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 4 + VERTICAL_GAP * 4 + ROW_HEIGHT * 0.5))),
    ("right_command": ((KEY_WIDTH * 3 + COMMAND_WIDTH + SPACE_WIDTH) + COMMAND_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 4 + VERTICAL_GAP * 4 + ROW_HEIGHT * 0.5))),
    ("right_option": ((KEY_WIDTH * 4 + COMMAND_WIDTH * 2 + SPACE_WIDTH) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 4 + VERTICAL_GAP * 4 + ROW_HEIGHT * 0.5))),
    ("left": ((KEY_WIDTH * 5 + COMMAND_WIDTH * 2 + SPACE_WIDTH) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 4 + VERTICAL_GAP * 4 + ROW_HEIGHT * 0.5))),
    ("down": ((KEY_WIDTH * 6 + COMMAND_WIDTH * 2 + SPACE_WIDTH) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 4 + VERTICAL_GAP * 4 + ROW_HEIGHT * 0.5))),
    ("right": ((KEY_WIDTH * 7 + COMMAND_WIDTH * 2 + SPACE_WIDTH) - KEY_WIDTH * 0.5,KEYBOARD_HEIGHT - (ROW_HEIGHT * 4 + VERTICAL_GAP * 4 + ROW_HEIGHT * 0.5))),
]
    
    KEY_POSITIONS = {}
    for row in [ROW_ONE_POSITIONS,ROW_TWO_POSITIONS,ROW_THREE_POSITIONS,ROW_FOUR_POSITIONS,ROW_FIVE_POSITIONS]:
        for k,v in row.items():
            KEY_POSITIONS[k] = v